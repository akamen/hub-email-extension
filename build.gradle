apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'application'

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
tasks.withType(GroovyCompile) { options.encoding = 'UTF-8' }

group = 'com.blackducksoftware.integration'
version = '1.0.0-SNAPSHOT'
description = ''
mainClassName = 'com.blackducksoftware.integration.email.Application'
applicationDefaultJvmArgs = ['-Dlog4j.configurationFile=APP_HOME_VAR_TOKEN/lib/log4j.xml', '-Dcustomer.properties=APP_HOME_VAR_TOKEN/customer.properties']

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	compile 'com.blackducksoftware.integration:hub-common:1.4.5-SNAPSHOT'

	compile 'org.slf4j:slf4j-api:1.7.21'
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.6.2'
	compile 'org.apache.logging.log4j:log4j-core:2.6.2'
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'commons-io:commons-io:2.5'
	compile 'commons-cli:commons-cli:1.3.1'
	compile 'com.google.code.gson:gson:2.7'
	compile 'org.jsoup:jsoup:1.9.2'
	compile 'javax.mail:mail:1.4.7'
	compile 'org.freemarker:freemarker:2.3.25-incubating'

	testCompile 'junit:junit:4.12'
}

jar { 
	sourceSets {
		main {
			resources {
				exclude 'customer.properties'
				exclude '**/images/*'
				exclude 'images'
				exclude '**/templates/*'
				exclude 'templates'
				exclude '**/lib/log4j.xml'
			}
		}
	}
}

startScripts {
  doLast {
    unixScript.text = unixScript.text.replace("APP_HOME_VAR_TOKEN", "\$APP_HOME")
    windowsScript.text = windowsScript.text.replace("APP_HOME_VAR_TOKEN", "%APP_HOME%")
  }
}

distributions {
    main {
        contents {
            from ('src/main/resources/images/') {into 'images/'}
            from('src/main/resources/templates/') {into 'templates/'}
            from('src/main/resources/customer.properties') {into ''}
            from('src/main/resources/lib/log4j.xml') {into 'lib/'}  
        }
    }
}



